[gd_scene load_steps=6 format=3 uid="uid://bk4fj7mkxg6oa"]

[ext_resource type="PackedScene" uid="uid://b0hrl5epkwfhg" path="res://Scenes/player.tscn" id="1_8v7vy"]
[ext_resource type="Texture2D" uid="uid://bvo6wcln5iaev" path="res://Assets/Final/Tiles.png" id="2_4lptr"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_eyfar"]
texture = ExtResource("2_4lptr")
texture_region_size = Vector2i(32, 32)
7:1/0 = 0
8:1/0 = 0
0:2/0 = 0
1:2/0 = 0
2:2/0 = 0
3:2/0 = 0
4:2/0 = 0
5:2/0 = 0
6:2/0 = 0
7:2/0 = 0
8:2/0 = 0
9:2/0 = 0
0:3/0 = 0
0:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
1:3/0 = 0
2:3/0 = 0
3:3/0 = 0
4:3/0 = 0
4:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:3/0 = 0
5:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:3/0 = 0
6:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:3/0 = 0
7:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
8:3/0 = 0
8:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
9:3/0 = 0
9:3/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:4/0 = 0
1:4/0 = 0
2:4/0 = 0
3:4/0 = 0
4:4/0 = 0
6:4/0 = 0
7:4/0 = 0
8:4/0 = 0
0:5/0 = 0
1:5/0 = 0
2:5/0 = 0
3:5/0 = 0
4:5/0 = 0
5:5/0 = 0
6:5/0 = 0
6:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
7:5/0 = 0
7:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
8:5/0 = 0
8:5/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
9:5/0 = 0
1:6/0 = 0
2:6/0 = 0
3:6/0 = 0
5:6/0 = 0
5:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:6/0 = 0
7:6/0 = 0
8:6/0 = 0
9:6/0 = 0
9:6/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
0:7/0 = 0
1:7/0 = 0
2:7/0 = 0
3:7/0 = 0
4:7/0 = 0
5:7/0 = 0
7:7/0 = 0
8:7/0 = 0
9:7/0 = 0
0:8/0 = 0
1:8/0 = 0
2:8/0 = 0
2:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:8/0 = 0
3:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:8/0 = 0
4:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:8/0 = 0
5:8/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
6:8/0 = 0
7:8/0 = 0
8:8/0 = 0
9:8/0 = 0
10:8/0 = 0
0:9/0 = 0
1:9/0 = 0
2:9/0 = 0
3:9/0 = 0
4:9/0 = 0
5:9/0 = 0
6:9/0 = 0
7:9/0 = 0
8:9/0 = 0
9:9/0 = 0
10:9/0 = 0
0:10/0 = 0
1:10/0 = 0
2:10/0 = 0
2:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
3:10/0 = 0
3:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
4:10/0 = 0
4:10/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, 16, -16, 16)
5:10/0 = 0
6:10/0 = 0
7:10/0 = 0
8:10/0 = 0
9:10/0 = 0
10:10/0 = 0
0:11/0 = 0
1:11/0 = 0
2:11/0 = 0
4:11/0 = 0
7:11/0 = 0
8:11/0 = 0
9:11/0 = 0
4:1/size_in_atlas = Vector2i(3, 1)
4:1/0 = 0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-48.0391, -16.0867, 48.125, -16, 48.125, 16, -48.0391, 16.0867)
4:0/size_in_atlas = Vector2i(3, 1)
4:0/0 = 0
2:1/0 = 0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, -0.5, 16, 16, -16, 16)
1:1/0 = 0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, -0.5, 16, 16, -16, 16)
3:1/0 = 0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-16, -16, 16, -16, 16, -0.5, 16, 16, -16, 16)
3:0/0 = 0
2:0/0 = 0
1:0/0 = 0

[sub_resource type="TileSet" id="TileSet_5es8j"]
tile_size = Vector2i(32, 32)
physics_layer_0/collision_layer = 1
sources/1 = SubResource("TileSetAtlasSource_eyfar")

[sub_resource type="GDScript" id="GDScript_vjqus"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()
"

[node name="Game" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_5es8j")
format = 2
layer_0/tile_data = PackedInt32Array(196607, 262145, 1, 131074, 262145, 1, 131077, 262145, 1, 196604, 262145, 1)

[node name="Player" parent="." instance=ExtResource("1_8v7vy")]
position = Vector2(42, 57)
script = SubResource("GDScript_vjqus")

[node name="Camera2D" type="Camera2D" parent="Player"]
position = Vector2(0, -6)
zoom = Vector2(4, 4)
position_smoothing_enabled = true
